template(name='rentals')
    .ui.stackable.padded.grid 
        .four.wide.column
            .ui.inline.header 
                +i name='clock'
                |rentals
                if currentUser
                    .ui.icon.button.add_rental
                        i.plus.large.icon
            .ui.compact.button.toggle_yours
                if viewing_yours
                    i.undo.green.icon
                else
                    i.circle.outline.icon
                |yours

            each picked_tags
                a.ui.blue.button.unpick_rental_tag
                    |#{this}
            each tag_results
                // if title
                a.ui.compact.button.pick_rental_tag
                    |#{title} 
                    // small.ui.grey.text #{count}
        .twelve.wide.column
            .ui.centered.stackable.cards
                each rental_docs 
                    +rental_card
                    


template(name='set_rental_sort_key')
    .item.set_sort
        if color
            .ui.label(class=color) #{label}
        else 
            if emoji
                em(data-emoji=emoji)
            else if icon
                i.icon(class=icon)
            |#{label}
        
        
                
                
        
        

template(name='set_view_mode_rental')
    .item.set_view
        i.icon(class=icon)
        |#{title}


// template(name='set_limit')
    .ui.compact.small.basic.button.set_limit #{amount}



template(name='rental_card')
    .ui.card.view_rental.pointer.fly_right
        img.ui.fluid.rounded.image(src="{{c.url image_id height=200 width=400 gravity='face' crop='fill'}}" class=currentUser.invert_class)
        .content
            a.ui.header(href="/rental/#{_id}") #{title}
            if private 
                i.large.lock.icon
            .ui.small.grey.header #{when}
            .smallscroll
                | !{content}
            // +comments_view_small
            +author_info
            if group_id     
                +group_info
            
        
template(name='rental_item')
    .ui.fluid.segment.view_rental.pointer
        a.ui.header(href="/rental/#{_id}/view") #{title}
        div
        .ui.small.grey.inline.header #{when}
        | #{content}
        each tags 
            .ui.basic.small.label #{this}
        

template(name='rental_view')
    with current_doc
        .ui.stackable.padded.grid
            .row 
                .four.wide.column
                    a.ui.circular.icon.button(href="/rentals" title='rentals')
                        i.chevron.left.icon
                        +i name='rental'
                        |rentals
                    .ui.inline.grey.header {{from_now start_datetime}}
                    
                    if can_edit
                        a.ui.circular.icon.button.edit_rental(href="/rental/#{_id}/edit" title='edit')
                            +i name='pencil'
                    .ui.segment
                        .ui.header 
                            small author
                        a.ui.header(href="/user/#{_author.username}") 
                            img.ui.avatar.image(src="{{c.url _author.image_id height=200 width=200 gravity='face' crop='fill'}}" class=currentUser.invert_class)
                            |#{_author.username}
                    .ui.list
                        .item #{views} views
                    each viewers
                        .ui.label #{username
                    +array_view key='tags' label='tags'  
                    +voting_full
                    +array_view key='location_tags' label='location_tags'  
                    +visibility
                    +group_widget
                .eight.wide.column.scrolling
                    .ui.header #{title}
                    img.ui.rounded.image(src="{{c.url image_id }}" class=currentUser.invert_class)
                    // a.ui.header(href="/user/#{target.username}")
                    //     |#{target.username}
                    |!{content}
                    div 
                    .spacer
                    .spacer
                    +comments
                .four.wide.column
                    .ui.header reservations
                    .ui.button.new_reservation
                        |reserve





template(name='rental_edit')
    with current_doc
        .ui.stackable.padded.grid
            .three.column.row 
                .column
                    .ui.inline.header 
                        +icolor name='news' cl='ui image inline pointer'
                        |edit rental
                    a.ui.icon.green.big.button(href="/rental/#{_id}/view" title='save')
                        i.checkmark.big.icon
                    +text_edit key='title' label='title'  
                    
                    // +boolean_edit key='has_content' icon='content'  
                    // if has_content
                    +html_edit key='body' label='content'  
                .column
                    i.large.link.red.remove.icon.delete_rental
                    .ui.header 
                        small author
                        |#{_author.username}
                    if in_dev
                        +single_user_edit key='_author_id' label='author'  
                    // +boolean_edit key='has_image' icon='content'  
                    // if has_image
                    +image_edit key='image_id' label='image'  
                    div 
                    +array_edit key='tags' label='tags'   icon='tags'
                    +boolean_edit key='published' icon='visible'  
                    if in_dev 
                        +text_edit key='model' label='model'  
                .column
                    +array_edit key='location_tags' label='location tags' icon='marker'  
                    unless published
                        a.ui.fluid.green.button.submit
                            i.checkmark.icon
                            |publish
                    else
                        .ui.basic.button.unpublish 
                            |unpublish
                    .ui.header
                        |audience
                    +boolean_edit key='private' label='private' 
                    if private 
                        +multi_user_edit key='access_user_ids' label='user picker'  
                    +group_picker